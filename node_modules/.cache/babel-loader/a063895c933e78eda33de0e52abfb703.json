{"ast":null,"code":"import _toConsumableArray from\"/home/aakash/Desktop/Atlan---Internship-Challenge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _classCallCheck from\"/home/aakash/Desktop/Atlan---Internship-Challenge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/aakash/Desktop/Atlan---Internship-Challenge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/home/aakash/Desktop/Atlan---Internship-Challenge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/home/aakash/Desktop/Atlan---Internship-Challenge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React from'react';import Papa from'papaparse';import InfoBox from'../info-box/info-box.component';import ChartDisplay from'../chart-display/chart-display.component';import'./content.styles.css';var Content=/*#__PURE__*/function(_React$Component){_inherits(Content,_React$Component);var _super=_createSuper(Content);function Content(){var _this;_classCallCheck(this,Content);_this=_super.call(this);_this.getChartData=function(){Papa.parse('./ipl-csv-dataset/Match.csv',{header:true,download:true,dynamicTyping:true,complete:_this.saveMatch});Papa.parse('./ipl-csv-dataset/Player.csv',{header:true,download:true,dynamicTyping:true,complete:_this.savePlayer});Papa.parse('./ipl-csv-dataset/Ball_by_Ball.csv',{header:true,download:true,dynamicTyping:true,complete:_this.saveBallByBall});/*Papa.parse('./ipl-csv-dataset/Season.csv', {header: true, download: true, dynamicTyping: true, complete: this.saveSeason});\n        Papa.parse('./ipl-csv-dataset/Team.csv', {header: true, download: true, dynamicTyping: true, complete: this.saveTeam});\n        Papa.parse('./ipl-csv-dataset/Player_Match.csv', {header: true, download: true, dynamicTyping: true, complete: this.savePlayerMatch});*/};_this.saveMatch=function(result){_this.setState({rawMatch:result});_this.dataForChart1();_this.dataForChart3();_this.dataForChart5();_this.dataForChart8();_this.dataForInfoBox1and2();};_this.savePlayer=function(result){_this.setState({rawPlayer:result});_this.dataForChart2();_this.dataForChart4();_this.dataForChart6();};_this.saveBallByBall=function(result){_this.setState({rawBallByBall:result});_this.dataForChart7();_this.dataForChart9();_this.dataForChart10();_this.dataForInfoBox3and4();};_this.dataForChart1=function(){// Bat or Field Decision\nvar batCount=0;if(Object.keys(_this.state.rawMatch).length!==0){_this.state.rawMatch.data.forEach(function(element){if(element.toss_decision===\"bat\"){batCount++;}});_this.setState({chartData1:{labels:['Bat','Field'],datasets:[{label:'Bat or Field Decision',data:[batCount,_this.state.rawMatch.data.length-batCount],backgroundColor:['rgba(121, 85, 72, 0.5)','rgba(76, 175, 80, 0.5)'],borderColor:['rgba(121, 85, 72,1)','rgba(76, 175, 80, 1)'],borderWidth:1}]}});}};_this.dataForChart2=function(){var Bowling_Skill={};if(Object.keys(_this.state.rawPlayer).length!==0){_this.state.rawPlayer.data.forEach(function(element){if(Bowling_Skill[element.Bowling_Skill]!==undefined){Bowling_Skill[element.Bowling_Skill]+=1;}else if(element.Bowling_Skill!==undefined){Bowling_Skill[element.Bowling_Skill]=1;}});_this.setState({chartData2:{labels:_toConsumableArray(Object.keys(Bowling_Skill)),datasets:[{label:'Winner',data:_toConsumableArray(Object.values(Bowling_Skill)),backgroundColor:['rgba(0, 150, 136, 0.5)','rgba(0, 150, 136, 0.5)','rgba(0, 150, 136, 0.5)','rgba(0, 150, 136, 0.5)','rgba(0, 150, 136, 0.5)','rgba(0, 150, 136, 0.5)','rgba(0, 150, 136, 0.5)','rgba(0, 150, 136, 0.5)','rgba(0, 150, 136, 0.5)','rgba(0, 150, 136, 0.5)','rgba(0, 150, 136, 0.5)','rgba(0, 150, 136, 0.5)','rgba(0, 150, 136, 0.5)','rgba(0, 150, 136, 0.5)','rgba(0, 150, 136, 0.5)'],borderColor:['rgba(0, 150, 136, 1)','rgba(0, 150, 136, 1)','rgba(0, 150, 136, 1)','rgba(0, 150, 136, 1)','rgba(0, 150, 136, 1)','rgba(0, 150, 136, 1)','rgba(0, 150, 136, 1)','rgba(0, 150, 136, 1)','rgba(0, 150, 136, 1)','rgba(0, 150, 136, 1)','rgba(0, 150, 136, 1)','rgba(0, 150, 136, 1)','rgba(0, 150, 136, 1)','rgba(0, 150, 136, 1)','rgba(0, 150, 136, 1)'],borderWidth:1}]}});_this.forceUpdate();}};_this.dataForChart3=function(){// Result Type\nvar result={};if(Object.keys(_this.state.rawMatch).length!==0){_this.state.rawMatch.data.forEach(function(element){if(result[element.result]!==undefined){result[element.result]+=1;}else{result[element.result]=1;}});_this.setState({chartData3:{labels:_toConsumableArray(Object.keys(result)),datasets:[{label:'Result Type',data:_toConsumableArray(Object.values(result)),backgroundColor:['rgba(58, 55, 52,0.5)','rgba(9, 168, 250,0.5)','rgba(255, 193, 7, 0.5)','rgba(255, 87, 34,0.5)'],borderColor:['rgba(58, 55, 52,1.0)','rgba(9, 168, 250.0)','rgba(255, 193, 7, 1)','rgba(255, 87, 34,1.0)'],borderWidth:1}]}});_this.forceUpdate();}};_this.dataForChart4=function(){// Left or Right Handed Batsmen\nvar handType={};if(Object.keys(_this.state.rawPlayer).length!==0){handType.Left_Hand=0;handType.Right_Hand=0;_this.state.rawPlayer.data.forEach(function(element){if(element.Batting_Hand===\"Left_Hand\"||element.Batting_Hand===\"Right_Hand\"){handType[element.Batting_Hand]+=1;}});_this.setState({chartData4:{labels:_toConsumableArray(Object.keys(handType)),datasets:[{label:'Left or Right Handed Batsmen',data:_toConsumableArray(Object.values(handType)),backgroundColor:['rgba(244, 67, 54, 0.5)','rgba(9, 98, 234, 0.5)'],borderColor:['rgba(244, 67, 54,1)','rgba(9, 98, 234, 1)'],borderWidth:1}]}});_this.forceUpdate();}};_this.dataForChart5=function(){// Ttoal Matches wins by Per Team\nvar winner={};if(Object.keys(_this.state.rawMatch).length!==0){_this.state.rawMatch.data.forEach(function(element){if(winner[element.winner]!==undefined){winner[element.winner]+=1;}else if(element.winner!==undefined){winner[element.winner]=1;}});_this.setState({chartData5:{labels:_toConsumableArray(Object.keys(winner)),datasets:[{label:'Winner',data:_toConsumableArray(Object.values(winner)),backgroundColor:['rgba(0, 150, 136, 0.5)','rgba(0, 150, 136, 0.5)','rgba(0, 150, 136, 0.5)','rgba(0, 150, 136, 0.5)','rgba(0, 150, 136, 0.5)','rgba(0, 150, 136, 0.5)','rgba(0, 150, 136, 0.5)','rgba(0, 150, 136, 0.5)','rgba(0, 150, 136, 0.5)','rgba(0, 150, 136, 0.5)','rgba(0, 150, 136, 0.5)','rgba(0, 150, 136, 0.5)','rgba(0, 150, 136, 0.5)','rgba(0, 150, 136, 0.5)','rgba(0, 150, 136, 0.5)'],borderColor:['rgba(0, 150, 136, 1)','rgba(0, 150, 136, 1)','rgba(0, 150, 136, 1)','rgba(0, 150, 136, 1)','rgba(0, 150, 136, 1)','rgba(0, 150, 136, 1)','rgba(0, 150, 136, 1)','rgba(0, 150, 136, 1)','rgba(0, 150, 136, 1)','rgba(0, 150, 136, 1)','rgba(0, 150, 136, 1)','rgba(0, 150, 136, 1)','rgba(0, 150, 136, 1)','rgba(0, 150, 136, 1)','rgba(0, 150, 136, 1)'],borderWidth:1}]}});_this.forceUpdate();}};_this.dataForChart6=function(){// Player Nationality\nvar nationality={};if(Object.keys(_this.state.rawPlayer).length!==0){_this.state.rawPlayer.data.forEach(function(element){if(nationality[element.Country]!==undefined){nationality[element.Country]+=1;}else if(element.Country!==undefined&&element.Is_Umpire!==\"1\"){nationality[element.Country]=1;}});_this.setState({chartData6:{labels:_toConsumableArray(Object.keys(nationality)),datasets:[{label:'Player Nationality',data:_toConsumableArray(Object.values(nationality)),backgroundColor:['rgba(255, 99, 132, 0.5)','rgba(54, 162, 235, 0.5)','rgba(245, 135, 31, 0.5)','rgba(128, 203, 174, 0.5)','rgba(255, 99, 132, 0.5)','rgba(54, 162, 235, 0.5)','rgba(255, 206, 86, 0.5)','rgba(75, 192, 192, 0.5)','rgba(153, 102, 255, 0.5)','rgba(255, 159, 64, 0.5)','rgba(255, 99, 132, 0.5)','rgba(54, 162, 235, 0.5)','rgba(245, 135, 31, 0.5)','rgba(128, 203, 174, 0.5)'],borderColor:['rgba(255, 99, 132, 1)','rgba(54, 162, 235, 1)','rgba(245, 135, 31, 1)','rgba(128, 203, 174, 1)','rgba(255, 99, 132, 1)','rgba(54, 162, 235, 1)','rgba(255, 206, 86, 1)','rgba(75, 192, 192, 1)','rgba(153, 102, 255, 1)','rgba(255, 159, 64, 1)','rgba(255, 99, 132, 1)','rgba(54, 162, 235, 1)','rgba(245, 135, 31, 1)','rgba(128, 203, 174, 1)'],borderWidth:1}]}});_this.forceUpdate();}};_this.dataForChart7=function(){// Average runs per over\nvar averages={};if(Object.keys(_this.state.rawBallByBall).length!==0){_this.state.rawBallByBall.data.forEach(function(element){if(averages[element.Over_Id]!==undefined&&element.Batsman_Scored!=='Do_nothing'&&element.Batsman_Scored!==' '){averages[element.Over_Id]={sum:averages[element.Over_Id].sum+element.Batsman_Scored,count:averages[element.Over_Id].count+1};}else if(element.Over_Id!==undefined&&element.Batsman_Scored!=='Do_nothing'&&element.Batsman_Scored!==' '){averages[element.Over_Id]={sum:element.Batsman_Scored,count:1};}});Object.entries(averages).forEach(function(element){console.log(element);averages[element[0]]=parseFloat(element[1].sum)/element[1].count;});_this.setState({chartData7:{labels:_toConsumableArray(Object.keys(averages)),datasets:[{label:'Average Runs Every Over',data:_toConsumableArray(Object.values(averages)),backgroundColor:['rgba(0, 150, 136, 0.5)'],borderColor:['rgba(103, 58, 183,1)'],borderWidth:1}]}});_this.forceUpdate();}};_this.dataForChart8=function(){//Toss Winners\nvar toss_winner={};if(Object.keys(_this.state.rawMatch).length!==0){_this.state.rawMatch.data.forEach(function(element){if(toss_winner[element.toss_winner]!==undefined){toss_winner[element.toss_winner]+=1;}else if(element.toss_winner!==undefined&&element.toss_winner!==' '){toss_winner[element.toss_winner]=1;}});_this.setState({chartData8:{labels:_toConsumableArray(Object.keys(toss_winner)),datasets:[{label:'Toss Win',data:_toConsumableArray(Object.values(toss_winner)),backgroundColor:['rgba(233, 30, 99, 0.5)','rgba(233, 30, 99, 0.5)','rgba(233, 30, 99, 0.5)','rgba(233, 30, 99, 0.5)','rgba(233, 30, 99, 0.5)','rgba(233, 30, 99, 0.5)','rgba(233, 30, 99, 0.5)','rgba(233, 30, 99, 0.5)','rgba(233, 30, 99, 0.5)','rgba(233, 30, 99, 0.5)','rgba(233, 30, 99, 0.5)','rgba(233, 30, 99, 0.5)','rgba(233, 30, 99, 0.5)','rgba(233, 30, 99, 0.5)'],borderColor:['rgba(233, 30, 99, 1)','rgba(233, 30, 99, 1)','rgba(233, 30, 99, 1)','rgba(233, 30, 99, 1)','rgba(233, 30, 99, 1)','rgba(233, 30, 99, 1)','rgba(233, 30, 99, 1)','rgba(233, 30, 99, 1)','rgba(233, 30, 99, 1)','rgba(233, 30, 99, 1)','rgba(233, 30, 99, 1)','rgba(233, 30, 99, 1)','rgba(233, 30, 99, 1)','rgba(233, 30, 99, 1)'],borderWidth:1}]}});_this.forceUpdate();}};_this.dataForChart9=function(){// Host Countries\nvar city={};if(Object.keys(_this.state.rawMatch).length!==0){_this.state.rawMatch.data.forEach(function(element){if(city[element.city]!==undefined){city[element.city]+=1;}else if(element.city!==undefined&&element.city!==' '){city[element.city]=1;}});_this.setState({chartData9:{labels:_toConsumableArray(Object.keys(city)),datasets:[{label:'Host Countries',data:_toConsumableArray(Object.values(city)),backgroundColor:['rgba(33, 150, 243,0.5)','rgba(76, 175, 80,0.5)','rgba(244, 67, 54,0.5)','rgba(33, 150, 243,0.5)','rgba(76, 175, 80,0.5)','rgba(244, 67, 54,0.5)','rgba(33, 150, 243,0.5)','rgba(76, 175, 80,0.5)','rgba(244, 67, 54,0.5)','rgba(33, 150, 243,0.5)','rgba(76, 175, 80,0.5)','rgba(244, 67, 54,0.5)','rgba(33, 150, 243,0.5)','rgba(76, 175, 80,0.5)','rgba(244, 67, 54,0.5)','rgba(33, 150, 243,0.5)','rgba(76, 175, 80,0.5)','rgba(244, 67, 54,0.5)','rgba(33, 150, 243,0.5)','rgba(76, 175, 80,0.5)','rgba(244, 67, 54,0.5)','rgba(33, 150, 243,0.5)','rgba(76, 175, 80,0.5)','rgba(244, 67, 54,0.5)','rgba(33, 150, 243,0.5)','rgba(76, 175, 80,0.5)','rgba(244, 67, 54,0.5)','rgba(33, 150, 243,0.5)','rgba(76, 175, 80,0.5)','rgba(244, 67, 54,0.5)','rgba(33, 150, 243,0.5)','rgba(76, 175, 80,0.5)'],borderColor:['rgba(33, 150, 243,1.0)','rgba(76, 175, 80,1.0)','rgba(244, 67, 54,1.0)','rgba(33, 150, 243,1.0)','rgba(76, 175, 80,1.0)','rgba(244, 67, 54,1.0)','rgba(33, 150, 243,1.0)','rgba(76, 175, 80,1.0)','rgba(244, 67, 54,1.0)','rgba(33, 150, 243,1.0)','rgba(76, 175, 80,1.0)','rgba(244, 67, 54,1.0)','rgba(33, 150, 243,1.0)','rgba(76, 175, 80,1.0)','rgba(244, 67, 54,1.0)','rgba(33, 150, 243,1.0)','rgba(76, 175, 80,1.0)','rgba(244, 67, 54,1.0)','rgba(33, 150, 243,1.0)','rgba(76, 175, 80,1.0)','rgba(244, 67, 54,1.0)','rgba(33, 150, 243,1.0)','rgba(76, 175, 80,1.0)','rgba(244, 67, 54,1.0)','rgba(33, 150, 243,1.0)','rgba(76, 175, 80,1.0)','rgba(244, 67, 54,1.0)','rgba(33, 150, 243,1.0)','rgba(76, 175, 80,1.0)','rgba(244, 67, 54,1.0)','rgba(33, 150, 243,1.0)','rgba(76, 175, 80,1.0)','rgba(244, 67, 54,1.0)','rgba(33, 150, 243,1.0)','rgba(76, 175, 80,1.0)','rgba(244, 67, 54,1.0)'],borderWidth:1}]}});_this.forceUpdate();}};_this.dataForChart10=function(){var dismissalType={};if(Object.keys(_this.state.rawBallByBall).length!==0){_this.state.rawBallByBall.data.forEach(function(element){if(dismissalType[element.Dissimal_Type]!==undefined){dismissalType[element.Dissimal_Type]+=1;}else if(element.Dissimal_Type!==undefined&&element.Dissimal_Type!==' '){dismissalType[element.Dissimal_Type]=1;}});_this.setState({chartData10:{labels:_toConsumableArray(Object.keys(dismissalType)),datasets:[{label:'Types of Dismissals',data:_toConsumableArray(Object.values(dismissalType)),backgroundColor:['rgba(233, 30, 99, 0.5)','rgba(233, 30, 99, 0.5)','rgba(233, 30, 99, 0.5)','rgba(233, 30, 99, 0.5)','rgba(233, 30, 99, 0.5)','rgba(233, 30, 99, 0.5)','rgba(233, 30, 99, 0.5)','rgba(233, 30, 99, 0.5)','rgba(233, 30, 99, 0.5)','rgba(233, 30, 99, 0.5)','rgba(233, 30, 99, 0.5)','rgba(233, 30, 99, 0.5)','rgba(233, 30, 99, 0.5)','rgba(233, 30, 99, 0.5)'],borderColor:['rgba(233, 30, 99, 1)','rgba(233, 30, 99, 1)','rgba(233, 30, 99, 1)','rgba(233, 30, 99, 1)','rgba(233, 30, 99, 1)','rgba(233, 30, 99, 1)','rgba(233, 30, 99, 1)','rgba(233, 30, 99, 1)','rgba(233, 30, 99, 1)','rgba(233, 30, 99, 1)','rgba(233, 30, 99, 1)','rgba(233, 30, 99, 1)','rgba(233, 30, 99, 1)','rgba(233, 30, 99, 1)'],borderWidth:1}]}});_this.forceUpdate();}};_this.dataForInfoBox1and2=function(){// Number of Superovers\nvar superovers=0;if(Object.keys(_this.state.rawMatch).length!==0){// Number of Matches\n_this.setState({infoBox1:_this.state.rawMatch.data.length-1});for(var i=0;i<_this.state.rawMatch.data.length;i++){if(_this.state.rawMatch.data[i].result==='tie'){superovers++;}}_this.setState({infoBox2:superovers});}};_this.dataForInfoBox3and4=function(){// Number of Fours\nvar fours=0;var sixes=0;if(Object.keys(_this.state.rawBallByBall).length!==0){_this.state.rawBallByBall.data.forEach(function(element){if(element.Batsman_Scored===4){fours++;}else if(element.Batsman_Scored===6){sixes++;}});_this.setState({infoBox3:fours,infoBox4:sixes});}_this.forceUpdate();};_this.state={chartData1:{},chartData2:{},chartData3:{},chartData4:{},chartData5:{},chartData6:{},chartData7:{},chartData8:{},chartData9:{},chartData10:{},rawMatch:{},rawPlayer:{},rawBallByBall:{}/*rawSeason: {},\n            rawTeam: {},\n            rawPlayerMatch: {},*/};return _this;}_createClass(Content,[{key:\"componentDidMount\",value:function componentDidMount(){this.getChartData();}// Converting CSV file to JSON data\n},{key:\"render\",value:function render(){/*==== Calculates current width of browser ====*/var w=window,d=document,e=d.documentElement,g=d.getElementsByTagName('body')[0],x=w.innerWidth||e.clientWidth||g.clientWidth;return/*#__PURE__*/React.createElement(\"div\",{className:\"content-container\"},/*#__PURE__*/React.createElement(\"div\",{className:\"title-container\"},/*#__PURE__*/React.createElement(\"h1\",null,/*#__PURE__*/React.createElement(\"span\",{className:\"bold\"},\"Indian Premier League\"),\" Statistics\")),/*#__PURE__*/React.createElement(\"div\",{className:\"infobox-container\"},/*#__PURE__*/React.createElement(InfoBox,{data:this.state.infoBox1,title:\"Total Matches\",icon:/*#__PURE__*/React.createElement(\"i\",{className:\"fas fa-cricket fa-4x\"}),text:\"Matches played till now.\"}),/*#__PURE__*/React.createElement(InfoBox,{data:this.state.infoBox2,title:\"Total Superovers\",icon:/*#__PURE__*/React.createElement(\"i\",{className:\"fas fa-cricket fa-4x\"}),text:\"Number of tie matches till now.\"}),/*#__PURE__*/React.createElement(InfoBox,{data:this.state.infoBox3,title:\"Total Fours\",icon:/*#__PURE__*/React.createElement(\"i\",{className:\"fas fa-cricket fa-4x\"}),text:\"Number of balls hitting the boundary.\"}),/*#__PURE__*/React.createElement(InfoBox,{data:this.state.infoBox4,title:\"Total Sixes\",icon:/*#__PURE__*/React.createElement(\"i\",{className:\"fas fa-cricket fa-4x\"}),text:\"Number of balls crossing the boundary.\"})),/*#__PURE__*/React.createElement(\"div\",{className:\"graph-container\"},/*#__PURE__*/React.createElement(ChartDisplay,{selectChart:\"bar\",displayLegend:false,chartData:this.state.chartData1,titleText:\"Batting / Fielding Decision\"}),/*#__PURE__*/React.createElement(ChartDisplay,{selectChart:\"horizontalBar\",displayLegend:false,chartData:this.state.chartData2,titleText:\"Bowling Skill\"}),/*#__PURE__*/React.createElement(ChartDisplay,{selectChart:\"doughnut\",chartData:this.state.chartData3,titleText:\"Result Type\"}),/*#__PURE__*/React.createElement(ChartDisplay,{selectChart:\"pie\",chartData:this.state.chartData4,titleText:\"Left / Right Handed Batsmen\"}),/*#__PURE__*/React.createElement(ChartDisplay,{selectChart:\"horizontalBar\",displayLegend:false,chartData:this.state.chartData5,titleText:\"Total Matches win\"}),/*#__PURE__*/React.createElement(ChartDisplay,{selectChart:\"horizontalBar\",displayLegend:false,chartData:this.state.chartData6,titleText:\"Player Nationality\"}),/*#__PURE__*/React.createElement(ChartDisplay,{selectChart:\"line\",chartData:this.state.chartData7,titleText:\"Average Runs Every Over\",selectLabel:true,selectLabelText:\"Overs\"}),/*#__PURE__*/React.createElement(ChartDisplay,{selectChart:x<900?'horizontalBar':'bar',displayLegend:false,chartData:this.state.chartData8,titleText:\"Toss winners\"}),/*#__PURE__*/React.createElement(ChartDisplay,{selectChart:\"bar\",chartData:this.state.chartData9,titleText:\"Matches city\",displayLegend:false}),/*#__PURE__*/React.createElement(ChartDisplay,{selectChart:\"horizontalBar\",displayLegend:false,chartData:this.state.chartData10,titleText:\"Type of  Dismissal\"})));}}]);return Content;}(React.Component);export default Content;","map":{"version":3,"sources":["/home/aakash/Desktop/Atlan---Internship-Challenge/src/components/content/content.component.jsx"],"names":["React","Papa","InfoBox","ChartDisplay","Content","getChartData","parse","header","download","dynamicTyping","complete","saveMatch","savePlayer","saveBallByBall","result","setState","rawMatch","dataForChart1","dataForChart3","dataForChart5","dataForChart8","dataForInfoBox1and2","rawPlayer","dataForChart2","dataForChart4","dataForChart6","rawBallByBall","dataForChart7","dataForChart9","dataForChart10","dataForInfoBox3and4","batCount","Object","keys","state","length","data","forEach","element","toss_decision","chartData1","labels","datasets","label","backgroundColor","borderColor","borderWidth","Bowling_Skill","undefined","chartData2","values","forceUpdate","chartData3","handType","Left_Hand","Right_Hand","Batting_Hand","chartData4","winner","chartData5","nationality","Country","Is_Umpire","chartData6","averages","Over_Id","Batsman_Scored","sum","count","entries","console","log","parseFloat","chartData7","toss_winner","chartData8","city","chartData9","dismissalType","Dissimal_Type","chartData10","superovers","infoBox1","i","infoBox2","fours","sixes","infoBox3","infoBox4","w","window","d","document","e","documentElement","g","getElementsByTagName","x","innerWidth","clientWidth","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Papa from 'papaparse';\n\nimport InfoBox from '../info-box/info-box.component';\nimport ChartDisplay from '../chart-display/chart-display.component';\n\nimport './content.styles.css';\n\nclass Content extends React.Component {\n    constructor(){\n        super();\n        this.state = {\n            chartData1: {},\n            chartData2: {},\n            chartData3: {},\n            chartData4: {},\n            chartData5: {},\n            chartData6: {},\n            chartData7: {},\n            chartData8: {},\n            chartData9: {},\n            chartData10: {},\n            rawMatch: {},\n            rawPlayer: {},\n            rawBallByBall: {}\n            /*rawSeason: {},\n            rawTeam: {},\n            rawPlayerMatch: {},*/\n        };\n    }\n\n    componentDidMount(){\n        this.getChartData();\n    }\n\n    // Converting CSV file to JSON data\n    getChartData = () => {\n        Papa.parse('./ipl-csv-dataset/Match.csv', {\n            header: true,\n            download: true,\n            dynamicTyping: true,\n            complete: this.saveMatch\n        });\n        Papa.parse('./ipl-csv-dataset/Player.csv', {\n            header: true,\n            download: true,\n            dynamicTyping: true,\n            complete: this.savePlayer\n        });\n        Papa.parse('./ipl-csv-dataset/Ball_by_Ball.csv', {\n            header: true,\n            download: true,\n            dynamicTyping: true,\n            complete: this.saveBallByBall\n        });\n        /*Papa.parse('./ipl-csv-dataset/Season.csv', {header: true, download: true, dynamicTyping: true, complete: this.saveSeason});\n        Papa.parse('./ipl-csv-dataset/Team.csv', {header: true, download: true, dynamicTyping: true, complete: this.saveTeam});\n        Papa.parse('./ipl-csv-dataset/Player_Match.csv', {header: true, download: true, dynamicTyping: true, complete: this.savePlayerMatch});*/\n    }\n\n    // Saving JSON data to state and calling associated functions to process data\n    saveMatch = (result) => {\n        this.setState({ rawMatch: result });\n        this.dataForChart1();\n        this.dataForChart3();\n       \n        this.dataForChart5();\n        this.dataForChart8();\n        \n        this.dataForInfoBox1and2();\n    }\n    savePlayer = (result) => {\n        this.setState({ rawPlayer: result });\n       \n        this.dataForChart2();\n        this.dataForChart4();\n        this.dataForChart6();\n    }\n    saveBallByBall = (result) => {\n        this.setState({ rawBallByBall: result });\n        this.dataForChart7();\n        this.dataForChart9();\n        this.dataForChart10();\n        this.dataForInfoBox3and4();\n        \n    }\n    /*saveSeason = (result) => {this.setState({rawSeason: result});}\n    saveTeam = (result) => {this.setState({rawTeam: result});}\n    savePlayerMatch = (result) => {this.setState({rawPlayerMatch: result});}*/\n\n    dataForChart1 = () => {\n        // Bat or Field Decision\n        let batCount = 0;\n        if(Object.keys(this.state.rawMatch).length !== 0){\n            this.state.rawMatch.data.forEach(element => {\n                if(element.toss_decision === \"bat\"){\n                    batCount++;\n                }\n            });\n\n            this.setState({\n                chartData1: {\n                    labels: ['Bat', 'Field'],\n                    datasets: [\n                        {\n                            label: 'Bat or Field Decision',\n                            data: [batCount, this.state.rawMatch.data.length - batCount],\n                            backgroundColor: [\n                                'rgba(121, 85, 72, 0.5)',\n                                'rgba(76, 175, 80, 0.5)'\n                            ],\n                            borderColor: [\n                                'rgba(121, 85, 72,1)',\n                                'rgba(76, 175, 80, 1)'\n                            ],\n                            borderWidth: 1\n                        }\n                    ]\n                }\n            });\n        }\n    }\n\n    dataForChart2 = () => {\n        var Bowling_Skill = {};\n        if(Object.keys(this.state.rawPlayer).length !== 0){\n            this.state.rawPlayer.data.forEach(element => {\n                if(Bowling_Skill[element.Bowling_Skill] !== undefined) {\n                    Bowling_Skill[element.Bowling_Skill] += 1;\n                } else if(element.Bowling_Skill !== undefined ) {\n                    Bowling_Skill[element.Bowling_Skill] = 1;\n                }\n            });\n\n            this.setState({\n                chartData2: {\n                    labels: [...Object.keys(Bowling_Skill)],\n                    datasets: [\n                        {\n                            label: 'Winner',\n                            data: [...Object.values(Bowling_Skill)],\n                            backgroundColor: [\n                                'rgba(0, 150, 136, 0.5)',\n                                'rgba(0, 150, 136, 0.5)',\n                                'rgba(0, 150, 136, 0.5)',\n                                'rgba(0, 150, 136, 0.5)',\n                                'rgba(0, 150, 136, 0.5)',\n                                'rgba(0, 150, 136, 0.5)',\n                                'rgba(0, 150, 136, 0.5)',\n                                'rgba(0, 150, 136, 0.5)',\n                                'rgba(0, 150, 136, 0.5)',\n                                'rgba(0, 150, 136, 0.5)',\n                                'rgba(0, 150, 136, 0.5)',\n                                'rgba(0, 150, 136, 0.5)',\n                                'rgba(0, 150, 136, 0.5)',\n                                'rgba(0, 150, 136, 0.5)',\n                                'rgba(0, 150, 136, 0.5)'\n                            ],\n                            borderColor: [\n                                'rgba(0, 150, 136, 1)',\n                                'rgba(0, 150, 136, 1)',\n                                'rgba(0, 150, 136, 1)',\n                                'rgba(0, 150, 136, 1)',\n                                'rgba(0, 150, 136, 1)',\n                                'rgba(0, 150, 136, 1)',\n                                'rgba(0, 150, 136, 1)',\n                                'rgba(0, 150, 136, 1)',\n                                'rgba(0, 150, 136, 1)',\n                                'rgba(0, 150, 136, 1)',\n                                'rgba(0, 150, 136, 1)',\n                                'rgba(0, 150, 136, 1)',\n                                'rgba(0, 150, 136, 1)',\n                                'rgba(0, 150, 136, 1)',\n                                'rgba(0, 150, 136, 1)'\n                            ],\n                            borderWidth: 1\n                        }\n                    ]\n                }\n            });\n            this.forceUpdate();\n        }\n    }\n\n\n    dataForChart3 = () => {\n        // Result Type\n        let result = {};\n        if(Object.keys(this.state.rawMatch).length !== 0){\n            this.state.rawMatch.data.forEach(element => {\n                if(result[element.result] !== undefined) {\n                    result[element.result] += 1;\n                } else {\n                    result[element.result] = 1;\n                }\n            });\n\n            this.setState({\n                chartData3: {\n                    labels: [...Object.keys(result)],\n                    datasets: [\n                        {\n                            label: 'Result Type',\n                            data: [...Object.values(result)],\n                            backgroundColor: [\n                                'rgba(58, 55, 52,0.5)',\n                                'rgba(9, 168, 250,0.5)',\n                                'rgba(255, 193, 7, 0.5)',\n                                'rgba(255, 87, 34,0.5)'\n                            ],\n                            borderColor: [\n                                'rgba(58, 55, 52,1.0)',\n                                'rgba(9, 168, 250.0)',\n                                'rgba(255, 193, 7, 1)',\n                                'rgba(255, 87, 34,1.0)'\n                            ],\n                            borderWidth: 1\n                        }\n                    ]\n                }\n            });\n            this.forceUpdate();\n        }\n    }\n\n    dataForChart4 = () => {\n        // Left or Right Handed Batsmen\n        var handType = {};\n        if(Object.keys(this.state.rawPlayer).length !== 0){\n            handType.Left_Hand = 0;\n            handType.Right_Hand = 0;\n            this.state.rawPlayer.data.forEach(element => {\n                if(element.Batting_Hand === \"Left_Hand\" || element.Batting_Hand === \"Right_Hand\") {\n                    handType[element.Batting_Hand] += 1;\n                }\n            });\n\n            this.setState({\n                chartData4: {\n                    labels: [...Object.keys(handType)],\n                    datasets: [\n                        {\n                            label: 'Left or Right Handed Batsmen',\n                            data: [...Object.values(handType)],\n                            backgroundColor: [\n                                'rgba(244, 67, 54, 0.5)',\n                                'rgba(9, 98, 234, 0.5)'\n                            ],\n                            borderColor: [\n                                'rgba(244, 67, 54,1)',\n                                'rgba(9, 98, 234, 1)'\n                            ],\n                            borderWidth: 1\n                        }\n                    ]\n                }\n            });\n            this.forceUpdate();\n        }\n    }\n    dataForChart5 = () => {\n        // Ttoal Matches wins by Per Team\n        var winner = {};\n        if(Object.keys(this.state.rawMatch).length !== 0){\n            this.state.rawMatch.data.forEach(element => {\n                if(winner[element.winner] !== undefined) {\n                    winner[element.winner] += 1;\n                } else if(element.winner !== undefined ) {\n                    winner[element.winner] = 1;\n                }\n            });\n\n            this.setState({\n                chartData5: {\n                    labels: [...Object.keys(winner)],\n                    datasets: [\n                        {\n                            label: 'Winner',\n                            data: [...Object.values(winner)],\n                            backgroundColor: [\n                                'rgba(0, 150, 136, 0.5)',\n                                'rgba(0, 150, 136, 0.5)',\n                                'rgba(0, 150, 136, 0.5)',\n                                'rgba(0, 150, 136, 0.5)',\n                                'rgba(0, 150, 136, 0.5)',\n                                'rgba(0, 150, 136, 0.5)',\n                                'rgba(0, 150, 136, 0.5)',\n                                'rgba(0, 150, 136, 0.5)',\n                                'rgba(0, 150, 136, 0.5)',\n                                'rgba(0, 150, 136, 0.5)',\n                                'rgba(0, 150, 136, 0.5)',\n                                'rgba(0, 150, 136, 0.5)',\n                                'rgba(0, 150, 136, 0.5)',\n                                'rgba(0, 150, 136, 0.5)',\n                                'rgba(0, 150, 136, 0.5)'\n                            ],\n                            borderColor: [\n                                'rgba(0, 150, 136, 1)',\n                                'rgba(0, 150, 136, 1)',\n                                'rgba(0, 150, 136, 1)',\n                                'rgba(0, 150, 136, 1)',\n                                'rgba(0, 150, 136, 1)',\n                                'rgba(0, 150, 136, 1)',\n                                'rgba(0, 150, 136, 1)',\n                                'rgba(0, 150, 136, 1)',\n                                'rgba(0, 150, 136, 1)',\n                                'rgba(0, 150, 136, 1)',\n                                'rgba(0, 150, 136, 1)',\n                                'rgba(0, 150, 136, 1)',\n                                'rgba(0, 150, 136, 1)',\n                                'rgba(0, 150, 136, 1)',\n                                'rgba(0, 150, 136, 1)'\n                            ],\n                            borderWidth: 1\n                        }\n                    ]\n                }\n            });\n            this.forceUpdate();\n        }\n    }\n\n    dataForChart6 = () => {\n        // Player Nationality\n        var nationality = {};\n        if(Object.keys(this.state.rawPlayer).length !== 0){\n            this.state.rawPlayer.data.forEach(element => {\n                if(nationality[element.Country] !== undefined) {\n                    nationality[element.Country] += 1;\n                } else if(element.Country !== undefined && element.Is_Umpire !== \"1\") {\n                    nationality[element.Country] = 1;\n                }\n            });\n\n            this.setState({\n                chartData6: {\n                    labels: [...Object.keys(nationality)],\n                    datasets: [\n                        {\n                            label: 'Player Nationality',\n                            data: [...Object.values(nationality)],\n                            backgroundColor: [\n                                'rgba(255, 99, 132, 0.5)',\n                                'rgba(54, 162, 235, 0.5)',\n                                'rgba(245, 135, 31, 0.5)',\n                                'rgba(128, 203, 174, 0.5)',\n                                'rgba(255, 99, 132, 0.5)',\n                                'rgba(54, 162, 235, 0.5)',\n                                'rgba(255, 206, 86, 0.5)',\n                                'rgba(75, 192, 192, 0.5)',\n                                'rgba(153, 102, 255, 0.5)',\n                                'rgba(255, 159, 64, 0.5)',\n                                'rgba(255, 99, 132, 0.5)',\n                                'rgba(54, 162, 235, 0.5)',\n                                'rgba(245, 135, 31, 0.5)',\n                                'rgba(128, 203, 174, 0.5)'\n                            ],\n                            borderColor: [\n                                'rgba(255, 99, 132, 1)',\n                                'rgba(54, 162, 235, 1)',\n                                'rgba(245, 135, 31, 1)',\n                                'rgba(128, 203, 174, 1)',\n                                'rgba(255, 99, 132, 1)',\n                                'rgba(54, 162, 235, 1)',\n                                'rgba(255, 206, 86, 1)',\n                                'rgba(75, 192, 192, 1)',\n                                'rgba(153, 102, 255, 1)',\n                                'rgba(255, 159, 64, 1)',\n                                'rgba(255, 99, 132, 1)',\n                                'rgba(54, 162, 235, 1)',\n                                'rgba(245, 135, 31, 1)',\n                                'rgba(128, 203, 174, 1)'\n                            ],\n                            borderWidth: 1\n                        }\n                    ]\n                }\n            });\n            this.forceUpdate();\n        }\n    }\n\n    dataForChart7 = () => {\n        // Average runs per over\n        let averages = {};\n\n        if(Object.keys(this.state.rawBallByBall).length !== 0) {\n            this.state.rawBallByBall.data.forEach(element => {\n                if(averages[element.Over_Id] !== undefined && element.Batsman_Scored !== 'Do_nothing' && element.Batsman_Scored !== ' ') {\n                    averages[element.Over_Id] = { sum : averages[element.Over_Id].sum + element.Batsman_Scored, count : averages[element.Over_Id].count + 1 };\n                } else if(element.Over_Id !== undefined && element.Batsman_Scored !== 'Do_nothing' && element.Batsman_Scored !== ' ') {\n                    averages[element.Over_Id] = { sum : element.Batsman_Scored, count : 1 };\n                }\n            });\n\n            Object.entries(averages).forEach(element => {\n                console.log(element);\n                averages[element[0]] = parseFloat(element[1].sum) / element[1].count;\n            });\n\n            this.setState({\n                chartData7: {\n                    labels: [...Object.keys(averages)],\n                    datasets: [\n                        {\n                            label: 'Average Runs Every Over',\n                            data: [...Object.values(averages)],\n                            backgroundColor: [\n                                'rgba(0, 150, 136, 0.5)',\n                            ],\n                            borderColor: [\n                                'rgba(103, 58, 183,1)'\n                            ],\n                            borderWidth: 1\n                        }\n                    ]\n                }\n            });\n            this.forceUpdate();\n        }\n    }\n    \n    dataForChart8 = () => {\n        //Toss Winners\n        var toss_winner = {};\n        if(Object.keys(this.state.rawMatch).length !== 0){\n            this.state.rawMatch.data.forEach(element => {\n                if(toss_winner[element.toss_winner] !== undefined) {\n                    toss_winner[element.toss_winner] += 1;\n                } else if(element.toss_winner !== undefined && element.toss_winner !== ' ') {\n                    toss_winner[element.toss_winner] = 1;\n                }\n            });\n\n            this.setState({\n                chartData8: {\n                    labels: [...Object.keys(toss_winner)],\n                    datasets: [\n                        {\n                            label: 'Toss Win',\n                            data: [...Object.values(toss_winner)],\n                            backgroundColor: [\n                                'rgba(233, 30, 99, 0.5)',\n                                'rgba(233, 30, 99, 0.5)',\n                                'rgba(233, 30, 99, 0.5)',\n                                'rgba(233, 30, 99, 0.5)',\n                                'rgba(233, 30, 99, 0.5)',\n                                'rgba(233, 30, 99, 0.5)',\n                                'rgba(233, 30, 99, 0.5)',\n                                'rgba(233, 30, 99, 0.5)',\n                                'rgba(233, 30, 99, 0.5)',\n                                'rgba(233, 30, 99, 0.5)',\n                                'rgba(233, 30, 99, 0.5)',\n                                'rgba(233, 30, 99, 0.5)',\n                                'rgba(233, 30, 99, 0.5)',\n                                'rgba(233, 30, 99, 0.5)'\n                            ],\n                            borderColor: [\n                                'rgba(233, 30, 99, 1)',\n                                'rgba(233, 30, 99, 1)',\n                                'rgba(233, 30, 99, 1)',\n                                'rgba(233, 30, 99, 1)',\n                                'rgba(233, 30, 99, 1)',\n                                'rgba(233, 30, 99, 1)',\n                                'rgba(233, 30, 99, 1)',\n                                'rgba(233, 30, 99, 1)',\n                                'rgba(233, 30, 99, 1)',\n                                'rgba(233, 30, 99, 1)',\n                                'rgba(233, 30, 99, 1)',\n                                'rgba(233, 30, 99, 1)',\n                                'rgba(233, 30, 99, 1)',\n                                'rgba(233, 30, 99, 1)'\n                            ],\n                            borderWidth: 1\n                        }\n                    ]\n                }\n            });\n            this.forceUpdate();\n        }\n    }\n    dataForChart9 = () => {\n        // Host Countries\n       \n        var city = {};\n        if(Object.keys(this.state.rawMatch).length !== 0){\n            this.state.rawMatch.data.forEach(element => {\n                if(city[element.city] !== undefined) {\n                    city[element.city] += 1;\n                } else if(element.city !== undefined && element.city !== ' ') {\n                    city[element.city] = 1;\n                }\n            });\n\n            this.setState({\n                chartData9: {\n                    labels: [...Object.keys(city)],\n                    datasets: [\n                        {\n                            label: 'Host Countries',\n                            data: [...Object.values(city)],\n                            backgroundColor: [\n                                'rgba(33, 150, 243,0.5)',\n                                'rgba(76, 175, 80,0.5)',\n                                'rgba(244, 67, 54,0.5)',\n                                'rgba(33, 150, 243,0.5)',\n                                'rgba(76, 175, 80,0.5)',\n                                'rgba(244, 67, 54,0.5)',\n                                'rgba(33, 150, 243,0.5)',\n                                'rgba(76, 175, 80,0.5)',\n                                'rgba(244, 67, 54,0.5)',\n                                'rgba(33, 150, 243,0.5)',\n                                'rgba(76, 175, 80,0.5)',\n                                'rgba(244, 67, 54,0.5)',\n                                'rgba(33, 150, 243,0.5)',\n                                'rgba(76, 175, 80,0.5)',\n                                'rgba(244, 67, 54,0.5)',\n                                'rgba(33, 150, 243,0.5)',\n                                'rgba(76, 175, 80,0.5)',\n                                'rgba(244, 67, 54,0.5)',\n                                'rgba(33, 150, 243,0.5)',\n                                'rgba(76, 175, 80,0.5)',\n                                'rgba(244, 67, 54,0.5)',\n                                'rgba(33, 150, 243,0.5)',\n                                'rgba(76, 175, 80,0.5)',\n                                'rgba(244, 67, 54,0.5)',\n                                'rgba(33, 150, 243,0.5)',\n                                'rgba(76, 175, 80,0.5)',\n                                'rgba(244, 67, 54,0.5)',\n                                'rgba(33, 150, 243,0.5)',\n                                'rgba(76, 175, 80,0.5)',\n                                'rgba(244, 67, 54,0.5)',\n                                'rgba(33, 150, 243,0.5)',\n                                'rgba(76, 175, 80,0.5)',\n                                \n                                \n                            ],\n                            borderColor: [\n                                'rgba(33, 150, 243,1.0)',\n                                'rgba(76, 175, 80,1.0)',\n                                'rgba(244, 67, 54,1.0)',\n                                'rgba(33, 150, 243,1.0)',\n                                'rgba(76, 175, 80,1.0)',\n                                'rgba(244, 67, 54,1.0)',\n                                'rgba(33, 150, 243,1.0)',\n                                'rgba(76, 175, 80,1.0)',\n                                'rgba(244, 67, 54,1.0)',\n                                'rgba(33, 150, 243,1.0)',\n                                'rgba(76, 175, 80,1.0)',\n                                'rgba(244, 67, 54,1.0)',\n                                'rgba(33, 150, 243,1.0)',\n                                'rgba(76, 175, 80,1.0)',\n                                'rgba(244, 67, 54,1.0)',\n                                'rgba(33, 150, 243,1.0)',\n                                'rgba(76, 175, 80,1.0)',\n                                'rgba(244, 67, 54,1.0)',\n                                'rgba(33, 150, 243,1.0)',\n                                'rgba(76, 175, 80,1.0)',\n                                'rgba(244, 67, 54,1.0)',\n                                'rgba(33, 150, 243,1.0)',\n                                'rgba(76, 175, 80,1.0)',\n                                'rgba(244, 67, 54,1.0)',\n                                'rgba(33, 150, 243,1.0)',\n                                'rgba(76, 175, 80,1.0)',\n                                'rgba(244, 67, 54,1.0)',\n                                'rgba(33, 150, 243,1.0)',\n                                'rgba(76, 175, 80,1.0)',\n                                'rgba(244, 67, 54,1.0)',\n                                'rgba(33, 150, 243,1.0)',\n                                'rgba(76, 175, 80,1.0)',\n                                'rgba(244, 67, 54,1.0)',\n                                'rgba(33, 150, 243,1.0)',\n                                'rgba(76, 175, 80,1.0)',\n                                'rgba(244, 67, 54,1.0)',\n                            ],\n                            borderWidth: 1\n                        }\n                    ]\n                }\n            });\n            this.forceUpdate();\n        }\n    }\n    dataForChart10 = () => {\n\n        var dismissalType = {};\n        if(Object.keys(this.state.rawBallByBall).length !== 0){\n            this.state.rawBallByBall.data.forEach(element => {\n                if(dismissalType[element.Dissimal_Type] !== undefined) {\n                    dismissalType[element.Dissimal_Type] += 1;\n                } else if(element.Dissimal_Type !== undefined && element.Dissimal_Type !== ' ') {\n                    dismissalType[element.Dissimal_Type] = 1;\n                }\n            });\n\n            this.setState({\n                chartData10: {\n                    labels: [...Object.keys(dismissalType)],\n                    datasets: [\n                        {\n                            label: 'Types of Dismissals',\n                            data: [...Object.values(dismissalType)],\n                            backgroundColor: [\n                                'rgba(233, 30, 99, 0.5)',\n                                'rgba(233, 30, 99, 0.5)',\n                                'rgba(233, 30, 99, 0.5)',\n                                'rgba(233, 30, 99, 0.5)',\n                                'rgba(233, 30, 99, 0.5)',\n                                'rgba(233, 30, 99, 0.5)',\n                                'rgba(233, 30, 99, 0.5)',\n                                'rgba(233, 30, 99, 0.5)',\n                                'rgba(233, 30, 99, 0.5)',\n                                'rgba(233, 30, 99, 0.5)',\n                                'rgba(233, 30, 99, 0.5)',\n                                'rgba(233, 30, 99, 0.5)',\n                                'rgba(233, 30, 99, 0.5)',\n                                'rgba(233, 30, 99, 0.5)'\n                            ],\n                            borderColor: [\n                                'rgba(233, 30, 99, 1)',\n                                'rgba(233, 30, 99, 1)',\n                                'rgba(233, 30, 99, 1)',\n                                'rgba(233, 30, 99, 1)',\n                                'rgba(233, 30, 99, 1)',\n                                'rgba(233, 30, 99, 1)',\n                                'rgba(233, 30, 99, 1)',\n                                'rgba(233, 30, 99, 1)',\n                                'rgba(233, 30, 99, 1)',\n                                'rgba(233, 30, 99, 1)',\n                                'rgba(233, 30, 99, 1)',\n                                'rgba(233, 30, 99, 1)',\n                                'rgba(233, 30, 99, 1)',\n                                'rgba(233, 30, 99, 1)'\n                            ],\n                            borderWidth: 1\n                        }\n                    ]\n                }\n            });\n            this.forceUpdate();\n        }\n      \n    }\n    dataForInfoBox1and2 = () => {        \n        // Number of Superovers\n        let superovers = 0;\n\n        if(Object.keys(this.state.rawMatch).length !== 0){\n            // Number of Matches\n            this.setState({\n                infoBox1: this.state.rawMatch.data.length - 1\n            });\n\n            for(var i = 0; i < this.state.rawMatch.data.length; i++){\n                if(this.state.rawMatch.data[i].result === 'tie'){\n                    superovers++;\n                }\n            }\n\n            this.setState({ infoBox2: superovers });\n        }\n    }\n\n    dataForInfoBox3and4 = () => {\n        // Number of Fours\n        let fours = 0;\n        let sixes = 0;\n        if(Object.keys(this.state.rawBallByBall).length !== 0){\n            this.state.rawBallByBall.data.forEach(element => {\n                if(element.Batsman_Scored === 4) {\n                    fours++;\n                }\n                else if(element.Batsman_Scored === 6) {\n                    sixes++;\n                }\n            });\n            this.setState({ infoBox3: fours, infoBox4: sixes });\n        }\n        this.forceUpdate();\n    }\n\n    render() {\n        /*==== Calculates current width of browser ====*/\n        let w = window,\n        d = document,\n        e = d.documentElement,\n        g = d.getElementsByTagName('body')[0],\n        x = w.innerWidth || e.clientWidth || g.clientWidth;\n\n        return (\n            <div className='content-container'>\n                <div className='title-container'>\n                    <h1><span className='bold'>Indian Premier League</span> Statistics</h1>\n                </div>\n                <div className='infobox-container'>\n                    <InfoBox data={this.state.infoBox1} title='Total Matches' icon={<i className=\"fas fa-cricket fa-4x\"></i>} text='Matches played till now.' />\n                    <InfoBox data={this.state.infoBox2} title='Total Superovers' icon={<i className=\"fas fa-cricket fa-4x\"></i>} text='Number of tie matches till now.' />\n                    <InfoBox data={this.state.infoBox3} title='Total Fours' icon={<i className=\"fas fa-cricket fa-4x\"></i>} text='Number of balls hitting the boundary.'  />\n                    <InfoBox data={this.state.infoBox4} title='Total Sixes' icon={<i className=\"fas fa-cricket fa-4x\"></i>} text='Number of balls crossing the boundary.'  />\n                </div>\n                <div className='graph-container'>\n                    \n                    <ChartDisplay \n                        selectChart='bar' \n                        displayLegend={false} \n                        chartData={this.state.chartData1} \n                        titleText='Batting / Fielding Decision' \n                    />\n                    <ChartDisplay \n                        selectChart='horizontalBar' \n                        displayLegend={false} \n                        chartData={this.state.chartData2} \n                        titleText='Bowling Skill' \n                    />\n                    <ChartDisplay \n                        selectChart='doughnut' \n                        chartData={this.state.chartData3} \n                        titleText='Result Type' \n                    />\n                     <ChartDisplay \n                        selectChart='pie' \n                        chartData={this.state.chartData4} \n                        titleText='Left / Right Handed Batsmen' \n                    />\n                     <ChartDisplay \n                        selectChart='horizontalBar' \n                        displayLegend={false} \n                        chartData={this.state.chartData5} \n                        titleText='Total Matches win' \n                    />\n                       <ChartDisplay \n                        selectChart='horizontalBar' \n                        displayLegend={false} \n                        chartData={this.state.chartData6} \n                        titleText='Player Nationality' \n                    />\n                    <ChartDisplay \n                        selectChart='line' \n                        chartData={this.state.chartData7} \n                        titleText='Average Runs Every Over' \n                        selectLabel={true} \n                        selectLabelText='Overs' \n                    />\n                    <ChartDisplay \n                        selectChart={x < 900 ? 'horizontalBar' : 'bar'} \n                        displayLegend={false} chartData={this.state.chartData8} \n                        titleText='Toss winners' \n                    />\n                     <ChartDisplay \n                        selectChart='bar' \n                        chartData={this.state.chartData9} \n                        titleText='Matches city' \n                        displayLegend={false}\n                    />\n                   \n                  \n                     <ChartDisplay \n                        selectChart='horizontalBar' \n                        displayLegend={false} \n                        chartData={this.state.chartData10} \n                        titleText='Type of  Dismissal' \n                    />\n                 \n                    \n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Content;"]},"metadata":{},"sourceType":"module"}